[{"content":"Tiddlywiki es una aplicación genial para guardar notas en un solo archivo html. Gracias a su api puedes añadir notas usando este commando curl\n1 2 3 4 5 6 curl -X PUT -i \u0026#39;http://192.168.0.12:8080/recipes/default/tiddlers/NewTiddlerTitle\u0026#39; --data \u0026#39;{ \u0026#34;tags\u0026#34;: \u0026#34;firstTag anotherTag\u0026#34;, \u0026#34;creator\u0026#34;: \u0026#34;gene\u0026#34;, \u0026#34;modifier\u0026#34;: \u0026#34;gene\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;The use of knowledge in society\u0026#34; }\u0026#39; -H \u0026#34;X-Requested-With: TiddlyWiki\u0026#34; ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/agregar-nota-a-tiddlywiki/","title":"Agregar Nota A Tiddlywiki"},{"content":" 1 2 3 4 5 # Muestra archivos modificados en el último día find /ruta/a/tu/directorio -type f -mtime -1 #Esto listará los archivos con detalles como permisos, propietario, tamaño y fecha de modificación. find /ruta/a/tu/directorio -type f -mmin -60 -ls ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/archivos-modificados-recientemente/","title":"Archivos Modificados Recientemente"},{"content":" Origen\nVim script Place the following code in your .vimrc before plug#begin() call, and Vim will automatically install vim-plug and the plugins when you open Vim.\n1 2 3 4 5 6 7 8 9 10 11 12 let data_dir = has(\u0026#39;nvim\u0026#39;) ? stdpath(\u0026#39;data\u0026#39;) . \u0026#39;/site\u0026#39; : \u0026#39;~/.vim\u0026#39; if empty(glob(data_dir . \u0026#39;/autoload/plug.vim\u0026#39;)) silent execute \u0026#39;!curl -fLo \u0026#39;.data_dir.\u0026#39;/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\u0026#39; autocmd VimEnter * PlugInstall --sync | source $MYVIMRC endif \u0026#34; An example of vim-plug section --------------------------------------------- call plug#begin() Plug \u0026#39;junegunn/seoul256.vim\u0026#39; call plug#end() silent! colorscheme seoul256 Lua script equivalent for Neovim 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 local data_dir = vim.fn.stdpath(\u0026#39;data\u0026#39;) if vim.fn.empty(vim.fn.glob(data_dir .. \u0026#39;/site/autoload/plug.vim\u0026#39;)) == 1 then vim.cmd(\u0026#39;silent !curl -fLo \u0026#39; .. data_dir .. \u0026#39;/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\u0026#39;) vim.o.runtimepath = vim.o.runtimepath vim.cmd(\u0026#39;autocmd VimEnter * PlugInstall --sync | source $MYVIMRC\u0026#39;) end -- An example of vim-plug section -------------------------------------------- local vim = vim local Plug = vim.fn[\u0026#39;plug#\u0026#39;] vim.call(\u0026#39;plug#begin\u0026#39;) Plug(\u0026#39;junegunn/seoul256.vim\u0026#39;) vim.call(\u0026#39;plug#end\u0026#39;) vim.cmd(\u0026#39;silent! colorscheme seoul256\u0026#39;) ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/automatic-installation-vim-plug/","title":"Automatic Installation Vim Plug"},{"content":" Crea el archivo .env\nEste archivo contendrá tus variables de entorno: 1 2 3 # Archivo .env VAR1=\u0026#34;valor1\u0026#34; VAR2=\u0026#34;valor2\u0026#34; Escribe el script Bash que cargará .env\nPuedes usar source para cargar las variables del archivo en el entorno del script: 1 2 3 4 5 # Cargar variables desde .env source \u0026#34;$(dirname \u0026#34;$0\u0026#34;)/.env\u0026#34; # Usar las variables echo \u0026#34;VAR1 es: $VAR1\u0026#34; echo \u0026#34;VAR2 es: $VAR2\u0026#34; Python Puedes usar el paquete python-dotenv con pip install python-dotenv.\n1 2 3 4 5 6 import os from dotenv import load_dotenv load_dotenv() API_KEY = os.gentenv (\u0026#39;API_KEY\u0026#39;) ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/cargar-archivos-.env-en-scripts/","title":"Cargar Archivos .Env En Scripts"},{"content":"","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/change-lxc-container-root-password/","title":"Change LXC Container Root Password"},{"content":" askubuntu\nEl proceso se puede resumir de la siguiente manera:\nInstalar iw, una herramienta para configurar dispositivos inalámbricos Linux:\n1 sudo apt install iw Enumerar los dispositivos inalámbricos disponibles:\n1 iw list Mostrar el estado de activación inalámbrica del dispositivo phy0 (ajustar el dispositivo según el resultado del commando anterior):\n1 iw phy0 wowlan show La sección de compatibilidad con WoWLAN muestra los modos de WoWLAN compatibles.\nHabilitar WoWLAN para el dispositivo phy0 con magic-packet:\n1 sudo iw phy0 wowlan enable magic-packet ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/configurar-wakeonlan-via-wifi/","title":"Configurar Wakeonlan Via Wifi"},{"content":"Convierte el ratón en un selector de colores de tu pantalla\n1 xcolor ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/conseguir-color-de-una-imagen/","title":"Conseguir Color De Una Imagen"},{"content":" 1 magick input.svg -background none -flatten output.png ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/convierte-svg-a-png-con-fondo-transparente/","title":"Convierte Svg A Png Con Fondo Transparente"},{"content":"Tldr link archivos 1 2 ln -s archivo_original link # soft link ln archivo_original link ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/crear-links-de-archivos/","title":"Crear Links De Archivos"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 touch roles/system/tasks/{essential,main,user,ssh}.yml tree roles roles └── system └── tasks ├── essential.yml ├── main.yml ├── ssh.yml └── user.yml 3 directories, 4 files ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/crear-multiples-archivos/","title":"Crear Multiples Archivos"},{"content":"","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/crear-multiples-archivos-oneline/","title":"Crear Multiples Archivos Oneline"},{"content":"source\nThe known_host file isn\u0026rsquo;t related to your problem.\nIt\u0026rsquo;s seems to be the problem, that your agent knows too many keys.\nYou can try it with\n1 ssh -o IdentityAgent=none -i private_key_file_for_raspberry ... You can add this to your config file, too.\n1 2 3 4 5 HOST raspi42 hostname raspberry.myhome user pi IdentityAgent none IdentityFile private_key_file_for_raspberry ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/demasiados-intentos-de-conexi%C3%B3n-ssh/","title":"Demasiados Intentos De Conexión Ssh"},{"content":" stackexchange\nSuelo conectarme a una red con muchas impresoras. Cuando se detectan impresoras, aparecen muchos mensajes molestos en GNOME. Uso la impresora rara vez, así que preferiría mantener CUPS desactivado la mayor parte del tiempo. Detener CUPS funciona y elimina las notificaciones molestas:\n1 systemctl stop cups Me gustaría desactivarlo al arrancar. Sorprendentemente, después de desactivarlo,\n1 systemctl disabled cups CUPS sigue ejecutándose después de reiniciar. El commando de estado\n1 systemctl status cups ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/desactivar-servicio-de-impresi%C3%B3n/","title":"Desactivar Servicio De Impresión"},{"content":" Origen\n1 glxinfo | grep -E -i \u0026#39;device|memory\u0026#39; Ea, a merendar.\n","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/detecta-la-ram-de-tu-gpu/","title":"Detecta La RAM De Tu GPU"},{"content":"Origen\nEl kernel de Linux registrará todos los dispositivos conectados a él durante el inicio y puede encontrarlos con el siguiente commando.\n1 dmesg | grep -i blue Puedes usar bluetoothctl para arrancar la app y luego usar:\n1 2 3 4 5 power on agent on scan on connect MAC_ADDRESS trust MAC_ADDRESS ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/detectar-dispositivos-bluetooth/","title":"Detectar Dispositivos Bluetooth"},{"content":"Usar variables en grep 1 grep -io Búsqueda En una carpeta (no recursiva) 1 grep \u0026#34;tu_string\u0026#34; /ruta/a/la/carpeta/* Esto buscará \u0026quot;tu_string\u0026quot; en todos los archivos dentro de la carpeta, pero no en subcarpetas.\nBúsqueda Recursiva en subdirectorios 1 grep -r \u0026#34;tu_string\u0026#34; /ruta/a/la/carpeta/ El flag -r (o -R) have que grep busque recursivamente en todos los subdirectorios.\nMostrar Número de línea en los resultados 1 grep -rn \u0026#34;tu_string\u0026#34; /ruta/a/la/carpeta/ -n: Muestra el número de línea donde aparece el string. Ignorar Mayúsculas y minúsculas 1 grep -ri \u0026#34;tu_string\u0026#34; /ruta/a/la/carpeta/ -i: Ignore diferencias entre mayúsculas y minúsculas. Buscar Archivos específicos (por extensión) Si solo quieres buscar en archivos .txt, usa:\n1 grep -r \u0026#34;tu_string\u0026#34; /ruta/a/la/carpeta/ --include=\u0026#34;*.txt\u0026#34; Excluir Archivos o carpetas Si quieres excluir ciertos archivos o carpetas:\n1 grep -r \u0026#34;tu_string\u0026#34; /ruta/a/la/carpeta/ --exclude-dir=\u0026#34;logs\u0026#34; Esto excluirá la carpeta logs de la búsqueda.\nMostrar Solo los nombres de los archivos que contienen el string 1 grep -rl \u0026#34;tu_string\u0026#34; /ruta/a/la/carpeta/ El flag -l have que solo se muestren los nombres de los archivos que contienen la cadena, sin mostrar las líneas.\nUsar rg (ripgrep) Para mayor velocidad Si tienes ripgrep (rg) instalado, es mucho más rápido:\n1 rg \u0026#34;tu_string\u0026#34; /ruta/a/la/carpeta/ ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/grep/","title":"Grep"},{"content":" Origen: ChatGPT\nTambién puedes hacer referencia a argumentos específicos del comando anterior utilizando la sintaxis !:n, donde \u0026ldquo;n\u0026rdquo; es el número del argumento que deseas utilizar. Por ejemplo, si el comando anterior fue ls -l archivo.txt, puedes utilizar la siguiente sintaxis para imprimir el nombre del archivo:\n1 echo !:2 ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/hacer-referencia-a-argumentos-especificos-del-comando-anterior/","title":"Hacer Referencia A Argumentos Especificos Del Comando Anterior"},{"content":"El PASSWORD_HASH lo puedes generar con:\n1 2 import hashlib print(hashlib.md5(\u0026#34;TU_CONTRASEÑA\u0026#34;.encode()).hexdigest()) O pasándole un argumento\n1 2 3 import hashlib import sys print(hashlib.md5(sys.argv[0].encode()).hexdigest()) ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/hash-una-contrase%C3%B1a/","title":"Hash Una Contraseña"},{"content":" Origen\nUsa esta linea cambiando \u0026lt;img_in\u0026gt; por la imagen a convertir.\n1 magick \u0026lt;img_in\u0026gt; -colorspace Gray \u0026lt;img_out\u0026gt; ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/imagemagick-convertir-imagen-a-tono-de-grises/","title":"Imagemagick Convertir Imagen A Tono De Grises"},{"content":"Usa este snippet para poder insertar enlaces en foros\n1 [url=https://www.bbcode.org/]This is bbcode.org![/url] ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/insertar-url-en-foro/","title":"Insertar Url En Foro"},{"content":"Clona el repositorio\n1 2 git clone https://github.com/iv-org/invidious.git cd invidious Para obtener po_token y visitor_data ejecuta:\n1 docker run quay.io/invidious/youtube-trusted-session-generator Para obtener el hmac:\n1 openssl rand -base64 21 Necesitas editar el docker-compose.yml para añadir estos tres tokens\nTambien puedes correr estos commandos y cargar las variables desde un .env:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #!/bin/bash # Ejecutar el contenedor y capturar la salida OUTPUT=$(docker run quay.io/invidious/youtube-trusted-session-generator) # Extraer los valores usando grep y sed o awk VISITOR_DATA=$(echo \u0026#34;$OUTPUT\u0026#34; | grep \u0026#39;visitor_data:\u0026#39; | sed \u0026#39;s/.*visitor_data: *//\u0026#39;) PO_TOKEN=$(echo \u0026#34;$OUTPUT\u0026#34; | grep \u0026#39;po_token:\u0026#39; | sed \u0026#39;s/.*po_token: *//\u0026#39;) # Verifica que se hayan extraído correctamente if [[ -z \u0026#34;$VISITOR_DATA\u0026#34; || -z \u0026#34;$PO_TOKEN\u0026#34; ]]; then echo \u0026#34;Error: No se pudieron extraer los datos correctamente.\u0026#34; exit 1 fi # hmac hmac=\u0026#34;$(openssl rand -base64 21)\u0026#34; # Guardarlos en un archivo .env cat \u0026lt;\u0026lt;EOF \u0026gt; .env VISITOR_DATA=$VISITOR_DATA PO_TOKEN=$PO_TOKEN HMAC=$hmac EOF echo \u0026#34;.env generado correctamente:\u0026#34; cat .env ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/instalar-invidious/","title":"Instalar Invidious"},{"content":" stackoverflow\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #!/bin/bash # Crear alias para goto y usarlo si DEBUG=TRUE shopt -s expand_aliases if [ -n \u0026#34;$DEBUG\u0026#34; ] ; then alias goto=\u0026#34;cat \u0026gt;/dev/null \u0026lt;\u0026lt;\u0026#34; else alias goto=\u0026#34;:\u0026#34; fi # Ir a tag #GOTO_1 goto \u0026#39;#GOTO_1\u0026#39; echo \u0026#34;Don\u0026#39;t run this\u0026#34; #GOTO1 echo \u0026#34;Run this\u0026#34; # Ir a tag #GOTO_2 goto \u0026#39;#GOTO_2\u0026#39; echo \u0026#34;Don\u0026#39;t run this either\u0026#34; #GOTO_2 echo \u0026#34;All done\u0026#34; ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/ir-a-una-l%C3%ADnea-espec%C3%ADfica-del-script/","title":"Ir A Una Línea Específica Del Script"},{"content":"Usa khal para agregar una entrada en el calendario.\nReemplaza las variables del siguiente commando por tus datos.\n1 2 3 khal new -a discos \u0026#34;${fecha}\u0026#34;:::\u0026#34;${title}\u0026#34; zenity –info –text=\u0026#39;creado nuevo evento\u0026#39; ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/khal.-crear-nueva-entrada-en-calendario/","title":"Khal. Crear Nueva Entrada En Calendario"},{"content":"Añade un nuevo usuario así desde el servidor, reemplazando el texto entre llaves:\n1 docker exec {kopia_container_name} kopia server user add {user}@{hostname} ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/kopia-server-add-user/","title":"Kopia Server Add User"},{"content":" Origen\n1 journalctl -f -u mystuff.service -f, --follow Mostrar solo las entradas de diario más recientes e imprimir continuamente las nuevas entradas a medida que se añaden al diario.\n-u, --unit=UNIT|PATTERN\n","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/leer-log-de-un-servicio/","title":"Leer Log De Un Servicio"},{"content":"LUKS Origen\nListar particiones encriptadas 1 2 3 4 5 6 7 8 9 10 11 lsblk -p NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT /dev/sda 8:0 0 931,5G 0 disk ├─/dev/sda1 8:1 0 512M 0 part /boot/efi ├─/dev/sda2 8:2 0 732M 0 part /boot └─/dev/sda3 8:3 0 930,3G 0 part └─/dev/mapper/sda3_crypt 253:0 0 930,3G 0 crypt ├─/dev/mapper/mint--vg-root 253:1 0 929,3G 0 lvm / └─/dev/mapper/mint--vg-swap_1 253:2 0 976M 0 lvm [SWAP] /dev/sr0 Añadir nuevas contraseñas sudo cryptsetup luksAddKey /dev/sda3\nBackups 1 2 3 4 sudo timeshift --create sudo timeshift --list sudo timeshift --restore --snapshot \u0026#34;2020-02-19_18-32-36\u0026#34; sudo timeshift --delete --snapshot \u0026#39;2014-10-12_16-29-08\u0026#39; ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/luks/","title":"Luks"},{"content":"Instalación sudo apt install rcm\nInstalar configuraciones rcup -d /path\nCrear configuraciones mkrc file\n","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/manejo-de-dotfiles-con-rcm/","title":"Manejo De Dotfiles Con RCM"},{"content":"1. Editar regla: sudo nano /etc/udev/rules.d/99-usb-mount.rules\nACTION==\u0026quot;add\u0026quot;, SUBSYSTEM==\u0026quot;block\u0026quot;, ENV{DEVTYPE}==\u0026quot;partition\u0026quot;, ENV{ID_BUS}==\u0026quot;usb\u0026quot;, TAG+=\u0026quot;systemd\u0026quot;, ENV{SYSTEMD_WANTS}=\u0026quot;usb-mount@%k.service\u0026quot;\n2. Crear Servicio sudo nano /etc/systemd/system/usb-mount@.service\n1 2 3 4 5 6 7 8 9 10 11 12 [Unit] Description=Mount USB device %I After=dev-%i.device BindsTo=dev-%i.device [Service] Type=oneshot ExecStart=/usr/local/bin/mount-usb.sh /dev/%I RemainAfterExit=yes [Install] WantedBy=multi-user.target 3. Creamos Script sudo nano /usr/local/bin/mount-usb.sh\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 #!/usr/bin/env python3 import os import sys import subprocess import time import logging from datetime import datetime # Configurar logging log_file = \u0026#34;/var/log/usb-mount.log\u0026#34; logging.basicConfig( filename=log_file, level=logging.DEBUG, format=\u0026#39;%(asctime)s - %(levelname)s - %(message)s\u0026#39; ) def mount_usb_and_restart_container(): logging.info(\u0026#34;Script iniciado\u0026#34;) if len(sys.argv) != 2: logging.error(\u0026#34;Error: Se requiere el nombre del dispositivo como argumento\u0026#34;) sys.exit(1) device = sys.argv[1] mount_point = \u0026#34;/mnt/usb\u0026#34; logging.info(f\u0026#34;Procesando dispositivo: {device}\u0026#34;) # Verificar si el dispositivo ya está en fstab try: with open(\u0026#39;/etc/fstab\u0026#39;, \u0026#39;r\u0026#39;) as f: fstab_content = f.read() if device in fstab_content: logging.info(f\u0026#34;El dispositivo {device} ya está definido en fstab. Ignorando.\u0026#34;) sys.exit(0) except Exception as e: logging.error(f\u0026#34;Error al verificar fstab: {e}\u0026#34;) # Verificar si el dispositivo ya está montado en otro lugar try: result = subprocess.run([\u0026#34;findmnt\u0026#34;, \u0026#34;-S\u0026#34;, device], stdout=subprocess.PIPE, text=True) if result.returncode == 0: logging.info(f\u0026#34;El dispositivo {device} ya está montado en otro lugar. Ignorando.\u0026#34;) sys.exit(0) except Exception as e: logging.error(f\u0026#34;Error al verificar montajes: {e}\u0026#34;) # Esperar un momento para asegurar que el dispositivo esté disponible time.sleep(2) # Crear punto de montaje si no existe os.makedirs(mount_point, exist_ok=True) logging.info(f\u0026#34;Punto de montaje creado/verificado: {mount_point}\u0026#34;) # Verificar si ya hay algo montado en el punto de montaje try: result = subprocess.run([\u0026#34;findmnt\u0026#34;, mount_point], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True) if result.returncode == 0: logging.info(f\u0026#34;Ya hay un dispositivo montado en {mount_point}. Desmontando...\u0026#34;) subprocess.run([\u0026#34;umount\u0026#34;, mount_point], check=True) except Exception as e: logging.warning(f\u0026#34;Aviso al verificar punto de montaje: {e}\u0026#34;) # Montar el nuevo dispositivo try: # Mostrar el dispositivo que vamos a montar logging.info(f\u0026#34;Intentando montar: {device} en {mount_point}\u0026#34;) subprocess.run([\u0026#34;ls\u0026#34;, \u0026#34;-la\u0026#34;, device], check=False) # Intentar montar mount_result = subprocess.run( [\u0026#34;mount\u0026#34;, device, mount_point], check=False, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True ) if mount_result.returncode == 0: logging.info(f\u0026#34;Dispositivo {device} montado en {mount_point}\u0026#34;) else: logging.error(f\u0026#34;Error al montar: {mount_result.stderr}\u0026#34;) sys.exit(1) except Exception as e: logging.error(f\u0026#34;Excepción al montar el dispositivo: {e}\u0026#34;) sys.exit(1) # Esperar un momento para asegurar que el montaje se completó time.sleep(2) # Reiniciar el contenedor de filebrowser try: logging.info(\u0026#34;Reiniciando contenedor filebrowser\u0026#34;) result = subprocess.run( [\u0026#34;docker\u0026#34;, \u0026#34;restart\u0026#34;, \u0026#34;filebrowser\u0026#34;], check=False, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True ) if result.returncode == 0: logging.info(\u0026#34;Contenedor filebrowser reiniciado con éxito\u0026#34;) else: logging.error(f\u0026#34;Error al reiniciar el contenedor: {result.stderr}\u0026#34;) except Exception as e: logging.error(f\u0026#34;Excepción al reiniciar el contenedor filebrowser: {e}\u0026#34;) sys.exit(1) logging.info(\u0026#34;Script completado correctamente\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: try: mount_usb_and_restart_container() except Exception as e: logging.error(f\u0026#34;Error no controlado: {e}\u0026#34;) 4. Hacer el script ejecutable sudo chmod +x /usr/local/bin/mount-usb.sh\n5. Recargar reglas udev sudo udevadm control --reload-rules\n6. Recargar systemd ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/montar-usb-autom%C3%A1ticamente/","title":"Montar Usb Automáticamente"},{"content":"curl -s \u0026quot;https://decapi.me/youtube/latest_video?user=NPR\n","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/obtener-%C3%BAltimo-video-de-un-canal-de-youtube/","title":"Obtener Último Video De Un Canal De Youtube"},{"content":"How to Reset Your Proxmox LXC Container Root Password Grab the container ID\nFirst you need to grab the container ID, which is the number next to the container name in the Proxmox node. For example, if the container name is “monitor”, the ID will be the number next to it.\nOpen up a shell\nNext, open up a shell (as root) into the container from the Proxmox host. You can do this by running the command “lxc-attach -n [container_id]”, with the appropriate container ID in place of the placeholder.\nFor example, if the container ID is 150, the command would be:\n1 lxc-attach -n 150 Change your password\nFinally, change your password by running the command “passwd”. This will prompt you to enter a new password for your container.\n1 passwd ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/reset-lxc-password/","title":"Reset Lxc Password"},{"content":" superuser\nPrefijo TMUX (p. ej., Ctrl+B) + :kill-session\no\ntmux kill-session (puede ejecutarse desde dentro o desde fuera de una sesión)\nAmbos estilos de invocación pueden usar las siguientes banderas:\n-t target-session destruye la sesión dada -a destruye todas las sesiones excepto la dada o la que está asociada\nEjecutar kill-session desde fuera de TMUX elimina la última sesión a la que estaba asociada. -a invierte la operación.\n","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/tmux-cerrar-resto-de-sesiones/","title":"Tmux Cerrar Resto De Sesiones"},{"content":"Añade esto a tu .zshrc\n1 2 alias -g -- -h=\u0026#39;-h 2\u0026gt;\u0026amp;1 | bat --language=help --style=plain\u0026#39; alias -g -- --help=\u0026#39;--help 2\u0026gt;\u0026amp;1 | bat --language=help --style=plain\u0026#39; ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/usar-bat-para-los-menus-de-ayuda-de-otras-apps/","title":"Usar Bat Para Los Menus De Ayuda De Otras Apps"},{"content":" Origen\nSi quieres forzar el guardado de un archivo con otro nombre en vim puedes usar:\n1 :w !sudo tee /etc/httpd/cyberciti.com.conf ","date":"2025-07-31T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/vim-guardar-archivo-con-nuevo-nombre/","title":"Vim, Guardar Archivo Con Nuevo Nombre"},{"content":"","date":"2025-07-24T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/atuin-historial-del-terminal-con-superpod%C3%A9res/","title":"Atuin   Historial Del Terminal Con Superpodéres"},{"content":"Desactiva Capslock: setxkbmap -option ctrl:nocaps\nPara volver a activarlo:\n","date":"2025-07-24T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/desactivar-may%C3%BAsculas/","title":"Desactivar Mayúsculas"},{"content":"Para eliminar las claves que referencien a dietpi:\n1 ssh-keygen -f \u0026#34;/home/$USER/.ssh/known_hosts\u0026#34; -R \u0026#34;dietpi\u0026#34; ","date":"2025-07-24T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/eliminar-clave-de-known_hosts/","title":"Eliminar Clave De Known_hosts"},{"content":"","date":"2025-07-24T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/fail2ban-how-to-unban-ips-that-are-blocked/","title":"Fail2ban How To Unban Ips That Are Blocked"},{"content":"Configure the host waking up 1 sudo ethtool -s eth0 wol g Access BIOS and enable Wake On Lan.\nHow Do I Send WOL Magic Packets Under Linux? 1 2 3 4 wakeonlan MAC-Address-Here wakeonlan \u0026#34;74:56:3C:5D:E6:1D\u0026#34; # proxmox wakeonlan \u0026#34;30:65:ec:a8:9b:37\u0026#34; # kodi OR\n1 etherwake MAC-Address-Here Crea un servicio para activar wol al inicio 1 2 3 4 5 6 7 8 9 10 11 [Unit] Description=Enable Wake On Lan Requires=network.target After=network.target [Service] Type=oneshot ExecStart = /sbin/ethtool --change enp1s0 wol g [Install] WantedBy=basic.target ","date":"2025-07-23T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/wake-on-lan/","title":"Wake On LAN"},{"content":"Crontab 1 crontab -e \u001b[1;33mImagen no encontrada: /mnt/windows/FTP/wiki/Obsidian/Dibujos/img/Pasted image 20240920220109.png\u001b[0m\nCada 5 minutos 1 */5 * * * * /ruta/a/tu/script.sh ","date":"2025-07-22T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/crontab/","title":"Crontab"},{"content":" 1 git restore archivo1 archivo2 Si además de restaurarlos quieres deshacer cualquier cambio que hayas staged con git add, usa:\n1 git restore --staged archivo1 archivo2 git restore archivo1 archivo2 ","date":"2025-07-22T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/git.-retroceder-en-github/","title":"Git. Retroceder En Github"},{"content":" 1 `grep -rHni \u0026#39;cadena_de_texto\u0026#39; .` -r Recursivo. -H mostrar nombre del archivo. -n mostrar línea.\n","date":"2025-07-15T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/buscar-cadena-de-texto-en-multiples-archivos/","title":"Buscar Cadena De Texto En Multiples Archivos"},{"content":"Montar 1 sudo mount -t exfat -o uid=1000,gid=1000,umask=022 /source /dest Copiar 1 rsync -avh --info=progress2 --no-perms --no-owner --no-group --ignore-existing --exclude=\u0026#39;temp/*\u0026#39; /mnt/dietpi_userdata/NFS/2TB/moode/ /mnt/500GB/Musica/ ","date":"2025-07-15T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/comando-para-copiar-a-exfat/","title":"Comando Para Copiar A Exfat"},{"content":" Origen\nRemove lines from test1 because they are in test2:\n1 grep -vxFf test2 test1 To overwrite test1:\n1 grep -vxFf test2 test1 \u0026gt;test1.tmp \u0026amp;\u0026amp; mv test1.tmp test1 ","date":"2025-07-15T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/comparando-dos-archivos-y-removiendo-coincidencias-en-solo-uno/","title":"Comparando Dos Archivos Y Removiendo Coincidencias En Solo Uno"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 sudo netstat -tulnp # requiere instalar net-tools (en debian) sudo ss -tulnp # Puertos especificos: sudo fuser -n tcp \u0026lt;puerto\u0026gt; # se puede cambiar tcp por udp ps -p $(sudo fuser -n tcp 80) # muestra nombre de los PID # Conexiones activas sudo lsof -i -n -P # Usuario concreto lsof -u username # Archivos abiertos por un proceso lsof -p 1234 # Procesos abiertos en un directorio lsof +D /ruta/al/directorio # Actualiza la salida cada 5 segundos lsof -i -n -P -r 5 ","date":"2025-07-15T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/comprobar-procesos-conectados-a-internet/","title":"Comprobar Procesos Conectados A Internet"},{"content":" 1 sudo iotop -o ","date":"2025-07-15T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/comprobar-que-proceso-usa-el-disco/","title":"Comprobar Que Proceso Usa El Disco"},{"content":"Usar sfdisk para copiar la estructura de particiones Sfdisk es una herramienta de línea de comandos que permite gestionar las particiones de un disco y copiar su tabla de particiones a un archivo. Esta herramienta solo maneja la estructura de particiones, no los datos contenidos en ellas.\nCopiar la estructura de particiones: Exportar la tabla de particiones a un archivo: Usando sfdisk, puedes copiar la tabla de particiones de un dispositivo (por ejemplo, /dev/sda) a un archivo de texto: 1 sudo sfdisk --dump /dev/sda \u0026gt; particiones.txt Esto creará un archivo de texto (particiones.txt) que contiene la estructura de particiones del dispositivo. Este archivo incluye la información sobre los tamaños y las ubicaciones de las particiones, pero no los datos dentro de ellas.\nRestaurar la estructura de particiones en otro dispositivo: Restaurar la tabla de particiones en otro dispositivo: Si quieres crear la misma estructura de particiones en otro dispositivo (por ejemplo, /dev/sdb), puedes usar el archivo exportado para restaurar la tabla de particiones: 1 sudo sfdisk /dev/sdb \u0026lt; particiones.txt ","date":"2025-07-15T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/copia-de-particiones-con-dd/","title":"Copia De Particiones Con Dd"},{"content":"Formatear disco 1 2 3 4 5 6 7 8 # Crear nueva tabla de particiones sudo fdisk /dev/sdXY # Orden: g, n, w # Formatear disco mkfs [options] [-t type fs-options] device [size] sudo mkfs -t ext4 /dev/sdb1 # EJEMPLO ","date":"2025-07-15T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/formatear-disco/","title":"Formatear Disco"},{"content":" 1 sudo systemctl list-units --type=service ","date":"2025-07-15T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/listar-servicios-systemctl/","title":"Listar Servicios Systemctl"},{"content":"Instalar 1 2 sudo apt install fuse sudo apt install ntfs-3g Montar 1 sudo mount -t ntfs /dev/sdXy /path ","date":"2025-07-15T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/montar-ntfs/","title":"Montar NTFS"},{"content":"Crea una imagen de una unidad como un disco duro o una tarjeta de memoria.\n1 sudo dd if=/dev/sdX of=name-of-iso.iso status=\u0026#34;progress\u0026#34; ","date":"2025-07-10T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/crear-iso-de-dispositivo/","title":"Crear ISO De Dispositivo"},{"content":"Crea un servidor http en una carpeta para poder descargar archivos rápidamente\n1 python3 -m http.server 8000 --bind 0.0.0.0 --directory /ruta/al/directorio ","date":"2025-07-10T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/crear-servidor-para-compartir-carpeta/","title":"Crear Servidor Para Compartir Carpeta"},{"content":"1.Crear El blog 1 2 3 hugo new site \u0026lt;nombre del sitio\u0026gt; cd \u0026lt;nombre del sitio\u0026gt; git init 3.Elegir Un tema e instalarlo https://themes.gohugo.io/themes/lightbi-hugo/\n1 2 3 4 git submodule add https://github.com/binokochumolvarghese/lightbi-hugo themes/lightbi-hugo echo \u0026#34;theme = \u0026#39;lightbi-hugo\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml hugo server cp -r \u0026#34;themes/lightbi-hugo/example site/*\u0026#34; $web_dir/content/ 4.Comprueba Que funciona localmente 1 hugo serve --bind \u0026#34;0.0.0.0\u0026#34; #--baseURL 192.168.1.14 # ip of server 5.Crea Repositorio en github terminado en .github.io 6.Sube El directorio de la web recien creada 1 2 3 git add . # subira todo el contendio de la carpeta en la que se está git commit -m \u0026#34;comentario\u0026#34; git push 7.Accede A github y ve a Settings \u0026gt; Pages hasta ver esto \u001b[1;33mImagen no encontrada: /mnt/windows/FTP/wiki/Obsidian/Dibujos/img/Pasted image 20240723144203.png\u001b[0m\n8.Cambia source A Github Actions (se guarda solo) \u001b[1;33mImagen no encontrada: /mnt/windows/FTP/wiki/Obsidian/Dibujos/img/Pasted image 20240723144218.png\u001b[0m\n9.Crea Un archivo en .github/workflows/hugo.yaml ¡Importante! Cambiar la versión de hugo a la que esté instalada 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 # Sample workflow for building and deploying a Hugo site to GitHub Pages name: Deploy Hugo site to Pages on: # Runs on pushes targeting the default branch push: branches: - main # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued. # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. concurrency: group: \u0026#34;pages\u0026#34; cancel-in-progress: false # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.128.0 steps: - name: Install Hugo CLI run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026amp;\u0026amp; sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Install Dart Sass run: sudo snap install dart-sass - name: Checkout uses: actions/checkout@v4 with: submodules: recursive fetch-depth: 0 - name: Setup Pages id: pages uses: actions/configure-pages@v5 - name: Install Node.js dependencies run: \u0026#34;[[ -f package-lock.json || -f npm-shrinkwrap.json ]] \u0026amp;\u0026amp; npm ci || true\u0026#34; - name: Build with Hugo env: HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache HUGO_ENVIRONMENT: production TZ: America/Los_Angeles run: | hugo \\ --gc \\ --minify \\ --baseURL \u0026#34;${{ steps.pages.outputs.base_url }}/\u0026#34; - name: Upload artifact uses: actions/upload-pages-artifact@v3 with: path: ./public # Deployment job deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v4 10.Crear Un commit en el repositorio y subirlo 1 2 3 git add . # subira todo el contendio de la carpeta en la que se está git commit -m \u0026#34;comentario\u0026#34; git push 11.En Github, elije Actions \u001b[1;33mImagen no encontrada: /mnt/windows/FTP/wiki/Obsidian/Dibujos/img/Pasted image 20240723144801.png\u001b[0m\nUna vez terminado el push y la creación del sitio debes ver algo así \u001b[1;33mImagen no encontrada: /mnt/windows/FTP/wiki/Obsidian/Dibujos/img/Pasted image 20240723144903.png\u001b[0m\nSe veria asi en el commit\n","date":"2025-07-10T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/crear-web-en-hugo/","title":"Crear Web En Hugo"},{"content":"Devuelve un link corto para compartir facilmente\nDesconozco la duración de dichos enlaces\ncurl https://is.gd/create.php\\?format\\=simple\\\u0026amp;url\\=google.com\n","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/acortar-url/","title":"Acortar Url"},{"content":"Con este comando puedes subir un archivo de texto para compartirlo fácilmente\n1 curl -F file=@starship.toml https://0x0.st ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/compartir-archivo-oneline/","title":"Compartir Archivo Oneline"},{"content":"curl qrenco.de/STRING\necho STRING | curl -F-=\\\u0026lt;- qrenco.de\n","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/crear-c%C3%B3digo-qr-con-texto/","title":"Crear Código Qr Con Texto"},{"content":"Puedes usar estos comandos para añadir aleatoriedad a diferentes programas.\nCommits aleatorios curl -s https://whatthecommit.com/index.txt\nChistes de padres curl https://icanhazdadjoke.com\nPuede usarse por ejemplo en un alias:\n1 2 3 4 5 # Para chezmoi alias chzu=\u0026#39;chezmoi git add . ; chezmoi git -- commit -m \u0026#34;$(curl -s https://whatthecommit.com/index.txt)\u0026#34; ; chezmoi git push\u0026#39; # Para git alias gitodo=\u0026#39;git add . ; git commit -m \u0026#34;$(curl -s https://whatthecommit.com/index.txt)\u0026#34; ; git push\u0026#39; ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/crear-commit-aleatorio/","title":"Crear Commit Aleatorio"},{"content":"Muestra la previsión metereológica para la ciudad que elijas durante los próximos días\n1 curl wttr.in/Jerez ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/el-tiempo-en-el-terminal-oneline/","title":"El Tiempo En El Terminal Oneline"},{"content":" Origen\nMuestra los dispositivos conectados a tu LAN en la subnet especificada\n1 sudo nmap -sn 192.168.1.0/24 ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/escanear-red-local/","title":"Escanear red local"},{"content":" Origen\nMacchanger Otro método utilize macchanger (también conocido como GNU MAC Changer). Ofrece diversas funciones, como cambiar la dirección para que coincida con un proveedor específico o aleatorizarla completamente.\nInstala el paquete macchanger.\nLa suplantación se realiza por interfaz. Especifica el nombre de la interfaz de red como interfaz en cada uno de los siguientes commandos.\nLa dirección MAC se puede suplantar con una dirección completamente aleatoria:\n1 macchanger -r interface Para aleatorizar solo los bytes específicos del dispositivo de la dirección MAC actual (es decir, para que, si se verifica la dirección MAC, se registre como del mismo proveedor), ejecuta el commando:\n1 macchanger -e interface Para cambiar la dirección MAC a un valor específico, ejecuta:\n1 macchanger --mac=XX:XX:XX:XX:XX:XX interface Donde XX:XX:XX:XX:XX:XX es la MAC a la que deseas cambiar.\nFinalmente, para restaurar la dirección MAC a su valor de hardware original y permanente:\n1 macchanger -p interface ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/mac-address-spoofing/","title":"Mac Address Spoofing"},{"content":"Para obtener datos sobre la localización de tu servidor usa cualquiera de estos comandos\ncurl ip-api.com curl http://ifconfig.co/json curl ifconfig.es/geo or curl ifconfig.es/json or curl ifconfig.es/country or curl ifconfig.es/code or curl ifconfig.es/city or curl ifconfig.es/latitude or curl ifconfig.es/longitude ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/obtener-geolocalizaci%C3%B3n/","title":"Obtener Geolocalización"},{"content":"Ejecuta cualquiera de estos comandos en un terminal para obtener la ip pública del host.\nIp publica\ncurl ipaddy.net curl eth0.me curl ipaddr.site curl ifconfig.co curl ifconfig.pro curl curlmyip.net curl ipinfo.io/ip curl icanhazip.com curl checkip.amazonaws.com curl ip-api.com/line?fields=query curl ifconfig.io/ip curl -s ip.liquidweb.com curl ifconfig.es curl ipaddress.sh curl 2ip.ru ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/obtener-ip-p%C3%BAblica/","title":"Obtener Ip Pública"},{"content":"Comprueba la velocidad de internet con este script online\n1 curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python - ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/prueba-de-velocidad-de-internet/","title":"Prueba De Velocidad De Internet"},{"content":"Añadir ~/local/bin al path\n1 export PATH=\u0026#34;/home/$USER/.local/bin:$PATH\u0026#34; ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/ruta-al-path/","title":"Ruta Al Path"},{"content":"✅ 1. Configurar el tiempo antes de volver a pedir la contraseña Esto lo controla sudo mediante la opción timestamp_timeout\n🔧 ¿Cómo cambiarlo? Edita o crea un archivo en /etc/sudoers.d/, por ejemplo:\n1 sudo visudo -f /etc/sudoers.d/timeout Y agrega esta línea:\n1 Defaults timestamp_timeout=5 🕐 Esto significa que sudo recordará la contraseña durante 5 minutos. Puedes poner:\n0: pide siempre la contraseña.\n-1: no la vuelve a pedir durante la sesión.\n✅ 2. Hacer que sudo se \u0026ldquo;olvide\u0026rdquo; cuando cerrás SSH Esto se puede hacer de varias formas. La más directa:\n🔧 Método: usar pam_exec para limpiar sudo al cerrar sesión Edita el archivo PAM de tu shell, por ejemplo para bash (esto depende de tu distribución):\n1 sudo nano /etc/pam.d/sshd` Agrega esta línea al final del archivo:\n1 session optional pam_exec.so type=close_session /usr/bin/sudo -K Esto ejecutará sudo -K cuando se cierre una sesión SSH, que borra el timestamp de sudo.\n🧪 Alternativa simple: alias en .bash_logout Si no quieres meterte con pam, puedes hacer algo más simple:\nEn tu Raspberry o servidor remoto, edita:\n1 nano ~/.bash_logout Agregá esta línea:\n1 sudo -K Eso hace que, cuando cierras una sesión interactiva (exit, cerrar shell), se borre el caché de sudo.\n📌 Esto no funciona si usas otro shell que no lee .bash_logout, como zsh. Para zsh, puedes usar ~/.zlogout.\n🧠 Verificación rápida Podés comprobar si el caché está activo con:\n1 sudo -v Y ver si está activo con:\n1 sudo -n true \u0026amp;\u0026amp; echo \u0026#34;Tiene caché sudo\u0026#34; || echo \u0026#34;No tiene caché sudo\u0026#34; ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/sudo-pw-timeout/","title":"Sudo Pw Timeout"},{"content":"Con este linea puedes obtener información sobre el valor de diversas criptomonedas:\n1 curl rate.sx ","date":"2025-07-09T00:00:00Z","permalink":"https://volteret4.github.io/notas/p/valor-criptomonedas-oneline/","title":"Valor Criptomonedas Oneline"}]